// ===========================================================================
// Media queries
// ===========================================================================

$mq-min-width-xs: null;
$mq-min-width-sm: 360px;
$mq-min-width-md: 768px;
$mq-min-width-lg: 992px;
$mq-min-width-xl: 1200px;

$mq-min-breakpoints: (
  xs:  $mq-min-width-xs,
  sm:  $mq-min-width-sm,
  md:  $mq-min-width-md,
  lg:  $mq-min-width-lg,
  xl:  $mq-min-width-xl,
);

$mq-max-width-xs: $mq-min-width-sm - 1px;
$mq-max-width-sm: $mq-min-width-md - 1px;
$mq-max-width-md: $mq-min-width-lg - 1px;
$mq-max-width-lg: $mq-min-width-xl - 1px;
$mq-max-width-xl: null;

$mq-max-breakpoints: (
  xs:  $mq-max-width-xs,
  sm:  $mq-max-width-sm,
  md:  $mq-max-width-md,
  lg:  $mq-max-width-lg,
  xl:  $mq-max-width-xl,
);

@function mq-get-breakpoint($name, $breakpoints) {
  @if map-has-key($breakpoints, $name) {
    @return map-get($breakpoints, $name);
  } @else {
    @error "Invalid argument: #{$name}.";
  }
}
@function mq-get-media-query($min-name: null, $max-name: null) {
  $min-width: null;
  $max-width: null;
  @if $min-name {
    $min-width: mq-get-breakpoint($min-name, $mq-min-breakpoints);
  }
  @if $max-name {
    $max-width: mq-get-breakpoint($max-name, $mq-max-breakpoints);
  }
  @if $min-width and $max-width {
    @if $min-width < $max-width {
      @return "screen and (min-width: #{$min-width}) and (max-width: #{$max-width})";
    } @else {
      @error "Invalid arguments: $min-name is greater than $max-name.";
    }
  } @else if $min-width {
    @return "screen and (min-width: #{$min-width})";
  } @else if $max-width {
    @return "screen and (max-width: #{$max-width})";
  } @else {
    @error "Invalid arguments: $min-name and $max-name are both null.";
  }
}
@mixin mq($min-name, $max-name: null) {
  $media-query: mq-get-media-query($min-name, $max-name);
  @if $media-query {
    @media #{$media-query} {
      @content;
    }
  } @else {
    @content;
  }
}
